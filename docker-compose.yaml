version: '3'
services:
  monitoring-app:
    build:
      context: .
    depends_on:
      - otel-collector
    env_file:
      - .env
    ports:
      - "8080:8080"
    restart: always

  # OpenTelemetry Collector Service
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    depends_on:
      - tempo
      - loki
      - prometheus
    ports:
      - 4317:4317  # gRPC for OTLP metrics, logs, and traces
      - 4318:4318  # HTTP for OTLP
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - /var/run/docker.sock:/var/run/docker.sock:ro   # Access to Docker socket
      - /proc/:/host/proc/:ro                         # Access to host process information
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro        # Access to cgroup data
      - /var/lib/docker/containers:/var/lib/docker/containers:ro  # Access to container logs
    command: ["--config", "/etc/otel-collector-config.yaml"]
    privileged: true  # Grants the container additional permissions
    user: "0:0"

  # Loki Service for Log Aggregation
  loki:
    image: grafana/loki:latest
    volumes:
      - ./loki/data:/data
      - ./loki/conf:/conf
    ports:
      - 3100:3100
    command: -config.file=/conf/loki-config.yaml
    
  # Tempo Service for Traces
  tempo:
    image: grafana/tempo:latest
    ports:
      - 3200:3200  # Tempo query port
    volumes:
      - ./tempo/conf/tempo-config.yaml:/etc/tempo/tempo-config.yaml  # Add the correct Tempo config file
    command: ["--config.file=/etc/tempo/tempo-config.yaml"]  # Ensure correct path and configuration are used


  # Grafana Service for Visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki
      - tempo
      - prometheus
    volumes:
      - ./grafana-data:/var/lib/grafana

  # Prometheus Service for Metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090  # Prometheus web UI
    volumes:
      - ./prometheus/conf/prometheus-config.yaml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      
volumes:
  grafana-data:
    driver: local